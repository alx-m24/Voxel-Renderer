const char* Blur_frag =
"#version 330 core\n"
"out vec4 FragColor;\n"
"\n"
"uniform sampler2D image;\n"
"uniform bool horizontal;\n"
"\n"
"const int MAX_RADIUS = 10;\n"
"\n"
"float gaussian(float x, float sigma) {\n"
"    return exp(-(x * x) / (2.0 * sigma * sigma)) / (2.0 * 3.14159 * sigma * sigma);\n"
"}\n"
"\n"
"void main()\n"
"{\n"
"    vec2 tex_offset = 1.0 / textureSize(image, 0); // single texel size\n"
"    vec2 TexCoords = gl_FragCoord.xy * tex_offset;\n"
"\n"
"    float radius = 10.0;\n"
"\n"
"    float sigma = radius / 2.0;\n"
"    vec3 result = texture(image, TexCoords).rgb * gaussian(0.0, sigma);\n"
"    float weightSum = gaussian(0.0, sigma);\n"
"\n"
"    for (int i = 1; i <= MAX_RADIUS; ++i) {\n"
"        if (i > int(radius)) break;\n"
"        float weight = gaussian(float(i), sigma);\n"
"        vec2 offset = horizontal ? vec2(tex_offset.x * i, 0.0) : vec2(0.0, tex_offset.y * i);\n"
"        result += texture(image, TexCoords + offset).rgb * weight;\n"
"        result += texture(image, TexCoords - offset).rgb * weight;\n"
"        weightSum += 2.0 * weight;\n"
"    }\n"
"\n"
"    result /= weightSum;\n"
"    FragColor = vec4(result, 1.0);\n"
"}\n"
;
